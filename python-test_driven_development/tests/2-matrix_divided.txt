>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Basic operation
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Original matrix untouched
>>> matrix
[[1, 2, 3], [4, 5, 6]]

# div not a number
>>> matrix_divided(matrix, "3")
Traceback (most recent call last):
  ...
TypeError: div must be a number

# div == 0
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

# matrix not a list of lists
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# rows of different sizes
>>> bad = [[1, 2], [3, 4, 5]]
>>> matrix_divided(bad, 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

# non-numeric element
>>> bad = [[1, 2], [3, "x"]]
>>> matrix_divided(bad, 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# infinite divisor yields zeros
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
